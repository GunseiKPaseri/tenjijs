const GS8ConvertTable:Record<string, string | undefined> = {
  "\u2841":"A",  // ⡁
  "\u2843":"B", // ⡃
  "\u2849":"C", // ⡉
  "\u2859":"D", // ⡙
  "\u2851":"E",
  "\u284B":"F",
  "\u285B":"G",
  "\u2853":"H",
  "\u284A":"I",
  "\u285A":"J",
  "\u2845":"K",
  "\u2847":"L",
  "\u284D":"M",
  "\u285D":"N",
  "\u2855":"O",
  "\u284F":"P",
  "\u285F":"Q",
  "\u2857":"R",
  "\u284E":"S",
  "\u285E":"T",
  "\u2865":"U",
  "\u2867":"V",
  "\u287A":"W",
  "\u286D":"X",
  "\u287D":"Y",
  "\u2875":"Z",
  "\u2801":"a",
  "\u2803":"b",
  "\u2809":"c",
  "\u2819":"d",
  "\u2811":"e",
  "\u280B":"f",
  "\u281B":"g",
  "\u2813":"h",
  "\u280A":"i",
  "\u281A":"j",
  "\u2805":"k",
  "\u2807":"l",
  "\u280D":"m",
  "\u281D":"n",
  "\u2815":"o",
  "\u280F":"p",
  "\u281F":"q",
  "\u2817":"r",
  "\u280E":"s",
  //"\u281E":"t",
  "\u2825":"u",
  "\u2827":"v",
  "\u283A":"w",
  "\u282D":"x",
  "\u283D":"y",
  "\u2835":"z",
  "\u282C": "0",
  "\u2821": "1",
  "\u2823": "2",
  "\u2829": "3",
  "\u2839": "4",
  "\u2831": "5",
  "\u282B": "6",
  "\u283B": "7",
  "\u2833": "8",
  "\u282A": "9",
  "\u2832": ".",
  "\u2852": "+",// ⡒
  "\u2824": "-",// ⠤
  "\u289C": "*",// ⢜
  "\u28CC": "/",// ⣌
  "\u281E": "%",// ⠞
  "\u28F6": "=",// ⣶
  "\u2894": "<",// ⢔
  "\u2862": ">",// ⡢
  "\u2816": "!",// ⠖
  "\u28B3": "|",// ⢳
  "\u282F": "&",// ⠯
  "\u2850": "^",// ⡐
  "\u2836": "?",// ⠶
  "\u2812": ":",// ⠒
  "\u2886": "(",// ⢆
  "\u2858": ")",// ⡘
  "\u28E6": "[",// ⣦
  "\u28F4": "]",// ⣴
  "\u28F7": "{",// ⣷
  "\u28FE": "}",// ⣾
  "\u2806": ";",// ⠆
  "\u2802": ",",// ⠂
};

const GS8ReverseTable = Object.fromEntries(Object.entries(GS8ConvertTable).map(([a,b])=>[b,a]))

export const convertGS8 = (x: string) => {
  return x.split("").map(a => GS8ConvertTable[a] ?? a).join("")
} 
